
find_package(CUDA 8.0 QUIET REQUIRED)
find_package(glm REQUIRED NO_MODULE)

if(WIN32)
    find_package(dlib 19.7 REQUIRED NO_MODULE)
    find_package(OpenCV 3.4.1 REQUIRED NO_MODULE)
    find_package(Eigen3 3.3 REQUIRED NO_MODULE)
    find_package(CURL REQUIRED NO_MODULE)
    find_package(jsoncpp REQUIRED NO_MODULE)
else()
    find_package(dlib 19.7 REQUIRED)
    find_package(OpenCV 3.4.1 REQUIRED)
    find_package(Eigen3 3.3 REQUIRED)
    find_package(CURL REQUIRED)
    find_package(jsoncpp REQUIRED)
endif()
find_package(glog REQUIRED)
find_package(Ceres REQUIRED)
find_package(SuiteSparse REQUIRED)
find_package(Boost 1.58 REQUIRED)
INCLUDE_DIRECTORIES("${SuiteSparse_INCLUDE_DIRS}/suitesparse")
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})
set(BLA_DEFINITIONS)
if (NOT WIN32 AND "$ENV{MKLROOT}" STREQUAL "")
    message(FATAL_ERROR "MKLROOT is not set. Please source the Intel MKL mklvars.sh file. By default: source /opt/intel/mkl/bin/mklvars.sh intel64 lp64")
endif()
option(MKL_USE_parallel "Use MKL parallel" True)
option(MKL_USE_parallel_FORCE "Use MKL parallel (force)" False)
option(MKL_USE_sdl "Single Dynamic Library or static/dynamic" False)
set(MKL_USE_interface "lp64" CACHE STRING "for Intel(R)64 compatible arch: ilp64/lp64 or for ia32 arch: cdecl/stdcall")
if (BLA_VENDOR MATCHES "_seq")
    set(MKL_USE_parallel OFF)
else()
    set(MKL_USE_parallel ON)
endif()
find_package(MKL REQUIRED)
if (MKL_FOUND)
    set(BLA_INCLUDE_DIR ${MKL_INCLUDE_DIR})
    set(BLAS_LIBRARIES ${MKL_LIBRARIES})
    set(BLA_DEFINITIONS USE_MKL)
    include_directories(${MKL_INCLUDE_DIR})
    LINK_DIRECTORIES(${MKL_LIBRARY_DIR})
endif()
